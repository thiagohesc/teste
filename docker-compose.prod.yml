services:
  backend:
    build:
      context: ./backend
    container_name: backend-teste
    environment:
      AUTH: ${AUTH}
    env_file:
      - ./.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${BACKEND}.${DOMAIN}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=le"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    volumes:
      - ./backend:/app/backend
    networks:
      - traefik-net
  frontend:
    build:
      context: ./frontend
    container_name: frontend-teste
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.www.rule=Host(`${FRONTEND}.${DOMAIN}`)"
      - "traefik.http.routers.www.entrypoints=websecure"
      - "traefik.http.routers.www.tls=true"
      - "traefik.http.routers.www.tls.certresolver=le"
      - "traefik.http.services.www.loadbalancer.server.port=80"
    volumes:
      - ./frontend/html:/usr/share/nginx/html
    networks:
      - traefik-net
  database:
    build:
      context: ./database
    container_name: database-teste
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d/
    ports:
      - "127.0.0.1:3307:3306"


networks:
  traefik-net:
    external: true